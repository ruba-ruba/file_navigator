.main
  .navigation
    .buttons.active
      span.documents
        = image_tag('folder_with_files.png', size: "40x0")
        br/
        | My Documents
    .buttons
      span.nav
        = image_tag('folder_with_files.png', size: "40x0")
        br/
        | Tree
  .area
    .placing
      .pl-top
        = image_tag('folder.png', size: '18x0')
        |  Files stored
      .pl-down
        | You are here: / 
        = link_to "My Documents", root_path
        |  / 
        - if @folder && @folder.path
          - @folder.path.split("/").each do |folder|
            = link_to folder, Folder.find_by_title(folder)
            |  / 
        = @folder.title if @folder
    .files
      table
        tr.t_header
          td.name
            = sortable 'title', 'Name'
          td.description
            = sortable 'description', 'Description'
          td.size
            | Size
          td.date
            = sortable 'created_at', 'Date'
          td.edit
            | Edit
          td.delete
            | Delete
          = form_tag destroy_multiple_folders_path, method: :delete, id: 'multiple_delete_form', remote: true do
            - @folders.each do |folder|
              tr
                td
                  span.popover_title data-content="#{folder.title}" rel="popover"
                    = link_to "<i class='silk-folder'></i> #{truncate(folder.title, length: 24)}".html_safe, folder
                td
                  = folder.description
                td
                td
                  = folder.created_at.strftime('%d/%m/%y %I:%M%p')
                td
                  = link_to  image_tag('edit.png', size: '20x0'), edit_folder_path(folder), {:remote => true, 'data-toggle' =>  "modal", 'data-target' => '.modal', :role => "button"}
                td
                  = link_to image_tag('Trash.png', size: '20x0'), folder, method: :delete, :remote => true, data: { confirm: 'Are you sure?' }, class: 'remove_folder'
                  
            = render 'items/items'
    .tree.hide
      = render 'shared/tree_elements', :elements => {:folders => Folder.roots, :items =>  Item.without_folder}



span.delete_multiple.hide
  span.action_buttons.warning
    | delete selected 

span.hide.folder_dom_id
  = element = dom_id(@folder) if @folder